{"version":3,"sources":["/src/index.tsx","/src/components/content.tsx","/src/components/footer.tsx","/src/components/header.tsx","/src/main.tsx","/src/store/store.ts","/src/components/download.tsx"],"sourcesContent":["import { createRoot } from 'react-dom/client';\nimport { Main } from './main';\nimport './index.css';\n\nconst container = document.querySelector('#root') as Element;\nconst root = createRoot(container);\n\nroot.render(<Main />);\n","import { Row, Col, Divider, Typography, Card, Space, Badge } from \"antd\";\nimport useStore from \"../store/store\";\n\nconst { Title, Text, Paragraph } = Typography;\n\nexport const Content = () => {\n  const { name, title, experience, workExperience, education, skills } =\n    useStore();\n  return (\n    <Row justify=\"center\" style={{ padding: \"20px 0\" }}>\n      <Col span={20}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Card title=\"个人信息\">\n              <Paragraph>\n                <Text strong>姓名：</Text>\n                {name}\n                <br />\n                <Text strong>职位：</Text>\n                {title}\n                <br />\n                <Text strong>工作经验：</Text>\n                {experience}\n              </Paragraph>\n            </Card>\n          </Col>\n\n          <Col span={24}>\n            <Card title=\"工作经历\">\n              {workExperience.map((exp, index) => (\n                <Row key={index} gutter={[16, 16]}>\n                  <Col span={24}>\n                    <Space wrap>\n                      <Badge\n                        color=\"blue\"\n                        text={<Text strong>{exp.company}</Text>}\n                      />\n                      <Text type=\"secondary\">-</Text>\n                      <Text>{exp.position}</Text>\n                      <Text>({exp.period})</Text>\n                    </Space>\n                  </Col>\n                  <Paragraph>\n                    {exp.responsibilities.map((resp, i) => (\n                      <Paragraph key={i}>• {resp}</Paragraph>\n                    ))}\n                  </Paragraph>\n                </Row>\n              ))}\n            </Card>\n          </Col>\n          <Col span={24}>\n            <Card title=\"教育背景\">\n              {education.map((edu, index) => (\n                <div key={index}>\n                  <Text strong>{edu.school}</Text> - {edu.degree} ({edu.period})\n                  <br />\n                </div>\n              ))}\n            </Card>\n          </Col>\n\n          <Col span={24}>\n            <Card title=\"技能\">\n              {skills.map((skill, index) => (\n                <Col span={24}>\n                  <Space key={index}>\n                    <Text type=\"secondary\">•</Text>\n                    <Text>{skill}</Text>\n                  </Space>\n                </Col>\n              ))}\n            </Card>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n","import { Row, Col, Typography, Space } from \"antd\";\nimport { GithubOutlined, MailOutlined, PhoneOutlined } from \"@ant-design/icons\";\nimport useStore from \"../store/store\";\n\nconst { Text, Link } = Typography;\n\nexport const Footer = () => {\n  const { email, phone, github } = useStore();\n  return (\n    <Row justify=\"center\" style={{ padding: \"20px 0\", background: \"#f0f2f5\" }}>\n      <Col span={20}>\n        <Row justify=\"space-between\" align=\"middle\">\n          <Col>\n            <Link type=\"secondary\" href={github} target=\"_blank\">\n              <GithubOutlined />\n            </Link>\n          </Col>\n          <Col>\n            <Space>\n              <MailOutlined />\n              <Text>{email}</Text>\n              <PhoneOutlined />\n              <Text>{phone}</Text>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n","import {\n  Col,\n  Row,\n  Typography,\n  Divider,\n  theme,\n  Tag,\n  Space,\n  ConfigProvider,\n} from \"antd\";\nimport useStore from \"../store/store\";\n\nconst { Title, Text } = Typography;\nconst { useToken } = theme;\n\nexport const Header = () => {\n  const { token } = useToken();\n\n  const { name, title, experience, email, phone, tags } = useStore();\n\n  return (\n    <ConfigProvider theme={{ token: { colorText: \"#fff\", colorLink: \"#fff\" } }}>\n      <div\n        className=\"header\"\n        style={{ backgroundColor: token.colorPrimary, color: \"#fff!important\" }}\n      >\n        <div className=\"wave-container\">\n          <svg\n            className=\"wave-svg\"\n            viewBox=\"0 0 1200 120\"\n            preserveAspectRatio=\"none\"\n          >\n            <path\n              fill=\"var(--wave-color)\"\n              d=\"M0,60 C200,100 400,20 600,60 C800,100 1000,20 1200,60 L1200,120 L0,120 Z\"\n            >\n              <animate\n                attributeName=\"d\"\n                dur=\"22s\"\n                repeatCount=\"indefinite\"\n                values=\"\n              M0,60 C200,100 400,20 600,60 C800,100 1000,20 1200,60 L1200,120 L0,120 Z;\n              M0,60 C200,20 400,100 600,60 C800,20 1000,100 1200,60 L1200,120 L0,120 Z;\n              M0,60 C200,100 400,20 600,60 C800,100 1000,20 1200,60 L1200,120 L0,120 Z\n            \"\n              />\n            </path>\n          </svg>\n        </div>\n        <Row justify=\"center\">\n          <Col span={22}>\n            <Row align=\"bottom\" justify=\"space-between\" gutter={24}>\n              <Col span={16}>\n                <Row gutter={[4, 4]}>\n                  <Col span={24}>\n                    <Title level={3}>{name}</Title>\n                  </Col>\n                  <Col span={24}>\n                    <Space split={<Divider type=\"vertical\" />}>\n                      <Text>{title}</Text>\n                      <Text>{experience}</Text>\n                    </Space>\n                  </Col>\n                  <Col span={24}>\n                    <Space wrap>\n                      {tags?.map((tag, index) => (\n                        <Tag key={index} color={tag.color} bordered={false}>\n                          {tag.name}\n                        </Tag>\n                      ))}\n                    </Space>\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={8} style={{ textAlign: \"right\" }}>\n                <Space direction=\"vertical\" size={0}>\n                  <Text copyable>{email}</Text>\n                  <Text copyable>{phone}</Text>\n                </Space>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    </ConfigProvider>\n  );\n};\n","import { ConfigProvider, Layout, Row } from \"antd\";\nimport { Header } from \"./components/header\";\nimport { Content } from \"./components/content\";\nimport { Footer } from \"./components/footer\";\nimport { Download } from \"./components/download\";\n\nconst { Header: AntHeader, Content: AntContent, Footer: AntFooter } = Layout;\n\nexport const Main = () => {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: \"#4a93fa\",\n          colorInfo: \"#4a93fa\",\n          colorSuccess: \"#42a312\",\n          colorWarning: \"#f9a704\",\n          colorError: \"#e60d10\",\n        },\n      }}\n    >\n      <Layout id=\"resume-layout\" style={{ backgroundColor: \"#fff\" }}>\n        <Header />\n        <AntContent>\n          <Content />\n        </AntContent>\n        <AntFooter style={{ padding: 0 }}>\n          <Footer />\n        </AntFooter>\n      </Layout>\n      <Download />\n    </ConfigProvider>\n  );\n};\n","import { create } from \"zustand\";\n\ninterface ResumeData {\n  name: string;\n  title: string;\n  experience: string;\n  tags: Array<{\n    name: string;\n    color: string;\n  }>;\n  email: string;\n  phone: string;\n  workExperience: Array<{\n    company: string;\n    position: string;\n    period: string;\n    responsibilities: string[];\n  }>;\n  education: Array<{\n    school: string;\n    degree: string;\n    period: string;\n  }>;\n  skills: string[];\n  github: string;\n}\n\nconst useStore = create<ResumeData>(() => ({\n  name: \"张三\",\n  title: \"前端开发工程师\",\n  experience: \"3年经验\",\n  tags: [\n    {\n      name: \"Devops\",\n      color: \"green\",\n    },\n    {\n      name: \"Golang\",\n      color: \"blue\",\n    },\n    {\n      name: \"CI/CD\",\n      color: \"purple\",\n    },\n    {\n      name: \"PaaS\",\n      color: \"red\",\n    },\n  ],\n  email: \"lcgash@163.com\",\n  phone: \"17600646861\",\n  workExperience: [\n    {\n      company: \"ABC科技有限公司\",\n      position: \"前端开发工程师\",\n      period: \"2020-至今\",\n      responsibilities: [\n        \"负责公司核心产品的前端架构设计和开发\",\n        \"使用React+TypeScript重构项目，提升性能30%\",\n        \"带领3人前端团队完成多个重点项目\",\n      ],\n    },\n    {\n      company: \"XYZ软件公司\",\n      position: \"前端开发实习生\",\n      period: \"2018-2020\",\n      responsibilities: [\n        \"参与公司官网和后台管理系统开发\",\n        \"协助团队完成前端组件库建设\",\n      ],\n    },\n  ],\n  education: [\n    {\n      school: \"上海交通大学\",\n      degree: \"计算机科学与技术 硕士\",\n      period: \"2016-2019\",\n    },\n    {\n      school: \"复旦大学\",\n      degree: \"软件工程 本科\",\n      period: \"2012-2016\",\n    },\n  ],\n  skills: [\n    \"精通React、TypeScript、Next.js\",\n    \"熟悉Ant Design、TailwindCSS等UI框架\",\n    \"掌握Node.js、Express后端开发\",\n    \"熟悉Git、Webpack等开发工具\",\n  ],\n  github: \"https://github.com/lcgash\",\n}));\n\nexport default useStore;\n","import { FloatButton } from \"antd\";\nimport { ArrowDownOutlined } from \"@ant-design/icons\";\nimport generatePDF from \"react-to-pdf\";\n\nexport const Download = () => {\n  const getTargetElement = () => document.getElementById(\"resume-layout\");\n\n  return (\n    <FloatButton\n      icon={<ArrowDownOutlined />}\n      onClick={() => generatePDF(getTargetElement, { filename: \"page.pdf\" })}\n    >\n      Download PDF\n    </FloatButton>\n  );\n};\n"],"names":[],"mappings":"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"}